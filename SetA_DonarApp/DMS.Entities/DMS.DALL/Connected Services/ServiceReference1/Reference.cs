//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DMS.DALL.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Donar", Namespace="http://schemas.datacontract.org/2004/07/DMS.WcfService")]
    [System.SerializableAttribute()]
    public partial class Donar : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DonarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DonarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DonarID {
            get {
                return this.DonarIDField;
            }
            set {
                if ((this.DonarIDField.Equals(value) != true)) {
                    this.DonarIDField = value;
                    this.RaisePropertyChanged("DonarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DonarName {
            get {
                return this.DonarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DonarNameField, value) != true)) {
                    this.DonarNameField = value;
                    this.RaisePropertyChanged("DonarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNo {
            get {
                return this.MobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNoField, value) != true)) {
                    this.MobileNoField = value;
                    this.RaisePropertyChanged("MobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organ {
            get {
                return this.OrganField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganField, value) != true)) {
                    this.OrganField = value;
                    this.RaisePropertyChanged("Organ");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDonarService")]
    public interface IDonarService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDonarService/GenerateDonarID", ReplyAction="http://tempuri.org/IDonarService/GenerateDonarIDResponse")]
        int GenerateDonarID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDonarService/GenerateDonarID", ReplyAction="http://tempuri.org/IDonarService/GenerateDonarIDResponse")]
        System.Threading.Tasks.Task<int> GenerateDonarIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDonarService/AddDonar", ReplyAction="http://tempuri.org/IDonarService/AddDonarResponse")]
        bool AddDonar(DMS.DALL.ServiceReference1.Donar donar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDonarService/AddDonar", ReplyAction="http://tempuri.org/IDonarService/AddDonarResponse")]
        System.Threading.Tasks.Task<bool> AddDonarAsync(DMS.DALL.ServiceReference1.Donar donar);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDonarServiceChannel : DMS.DALL.ServiceReference1.IDonarService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DonarServiceClient : System.ServiceModel.ClientBase<DMS.DALL.ServiceReference1.IDonarService>, DMS.DALL.ServiceReference1.IDonarService {
        
        public DonarServiceClient() {
        }
        
        public DonarServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DonarServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DonarServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DonarServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GenerateDonarID() {
            return base.Channel.GenerateDonarID();
        }
        
        public System.Threading.Tasks.Task<int> GenerateDonarIDAsync() {
            return base.Channel.GenerateDonarIDAsync();
        }
        
        public bool AddDonar(DMS.DALL.ServiceReference1.Donar donar) {
            return base.Channel.AddDonar(donar);
        }
        
        public System.Threading.Tasks.Task<bool> AddDonarAsync(DMS.DALL.ServiceReference1.Donar donar) {
            return base.Channel.AddDonarAsync(donar);
        }
    }
}
